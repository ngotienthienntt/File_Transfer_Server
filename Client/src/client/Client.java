/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import common.FileData;
import java.io.*;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.Inet4Address;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Van_Son_Ho
 */
public class Client extends javax.swing.JFrame {
    final String PathOfDataFile = "./Data";
    
    private static Socket s = null;
    private static InputStream is;
    private static BufferedReader br;
    private static OutputStream os;
    private static BufferedWriter bw;
    private static String receivedMessage;
    UDPClient udpClient = new UDPClient();
    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
        LoadListFileToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableFile = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Port = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        IP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        FileName = new javax.swing.JTextField();
        Download = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListFileClient = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        TableFile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "File modified", "Type", "Size", "IP", "Port"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableFilepassInfo(evt);
            }
        });
        jScrollPane1.setViewportView(TableFile);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("List File on Server");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setText("Port");
        jLabel11.setToolTipText("");

        Port.setEditable(false);
        Port.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Port.setEnabled(false);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("IP");

        IP.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        IP.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("File Name");

        FileName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        FileName.setEnabled(false);

        Download.setText("DOWNLOAD");
        Download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DownloadActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel2.setText("CLIENT");

        jButton1.setText("Load");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("List File on Client");

        jTableListFileClient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File Name", "Size", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableListFileClient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListFileClientpassInfo(evt);
            }
        });
        jScrollPane2.setViewportView(jTableListFileClient);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(339, 339, 339)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(89, 89, 89)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FileName, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel11)
                                        .addGap(16, 16, 16)
                                        .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Download))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 838, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FileName, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(IP, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Port, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(Download, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    //sent message
    private void sentMessageLoad()
    {
        

        try {
            bw.write("Load");
            bw.newLine();
            bw.flush();
            receivedMessage=br.readLine();
            System.out.println("Received : " + receivedMessage);
            receivedMessage = receivedMessage.replace("], ", "/");
            receivedMessage = receivedMessage.replace("[", "");
            receivedMessage = receivedMessage.replace("]", "");
            System.out.println( receivedMessage);
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    //load file từ master server
    private void Load()
    {
        try{
            sentMessageLoad();
            DefaultTableModel tableModel = (DefaultTableModel) TableFile.getModel();
            String[] rmStrings = receivedMessage.split("/");
            for (String rmString : rmStrings) {
                tableModel.addRow(new Object[]{rmString.split(", ")[0],rmString.split(", ")[1],rmString.split(", ")[2], 
                                rmString.split(", ")[3], rmString.split(", ")[4], rmString.split(", ")[5]});
            }
            TableFile.setModel(tableModel);
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,
            "Can't load list file from Master Server\n Check state of Master Server",
            "Inane error",
            JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    private void  LoadListFileToTable(){
        ArrayList<FileData> ListFileData = getListFileFromDataFile();
        DefaultTableModel model;      
        model = (DefaultTableModel) jTableListFileClient.getModel();
        model.getDataVector().removeAllElements();
        for (FileData file : ListFileData){
            Object[] items = new Object[]{
                file.getFileName(),
                file.getSizeAutoConvert(),
                "DONE"
            };

            model.addRow(items);
        }

    }
    
    private ArrayList<FileData> getListFileFromDataFile(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        ArrayList<FileData> results = new ArrayList<FileData>();


        File[] files = new File(PathOfDataFile).listFiles();      
        for (File file : files) {
            if (file.isFile()) {
                FileData tempFile = new FileData();
                String fileName = file.getName();
                tempFile.setFileName(fileName);
                tempFile.setSize(file.length()); // đổi từ byte sang MB
                tempFile.setLastModified(sdf.format(file.lastModified()));                
                String[] tempListFileName = fileName.split(Pattern.quote("."));
                tempFile.setType(tempListFileName[tempListFileName.length - 1]);
                results.add(tempFile);
            }
        }
        
        return results;
    }
    
    //select file
    private void TableFilepassInfo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableFilepassInfo
        int is = TableFile.getSelectedRow();
        IP.setText(TableFile.getValueAt(is, 4).toString());
        FileName.setText(TableFile.getValueAt(is, 0).toString());
        Port.setText(TableFile.getValueAt(is, 5).toString());
        System.out.println("|"+TableFile.getValueAt(is, 5).toString()+"|");
    }//GEN-LAST:event_TableFilepassInfo

    //trả về cho master server là đã đóng kết nói
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        try {
            bw.write("Close");
            bw.newLine();
            bw.flush();
        } catch (IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    
    private void DownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DownloadActionPerformed
        String serverIP = IP.getText();
        int port = Integer.parseInt(Port.getText());
        String fileName = FileName.getText();
        
        udpClient.openClient();
        udpClient.setServerHost(serverIP);
        udpClient.setServerPort(port);      
        udpClient.multiThreadSendMessage(fileName);
        udpClient.multiThreadReceiveFile(jTableListFileClient);
        
    }//GEN-LAST:event_DownloadActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Load();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTableListFileClientpassInfo(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListFileClientpassInfo
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableListFileClientpassInfo

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try
		{
                    s = new Socket("localhost",2000);
                    System.out.println(s.getPort());

                    is = s.getInputStream();
                    br = new BufferedReader(new InputStreamReader(is));

                    os = s.getOutputStream();
                    bw = new BufferedWriter(new OutputStreamWriter(os));

                    String sentMessage= "client";
                    bw.write(sentMessage);
                    bw.newLine();
                    bw.flush();

                    receivedMessage=br.readLine();

                    System.out.println("Received : " + receivedMessage);
                    receivedMessage = receivedMessage.replace("], ", "/");
                    receivedMessage = receivedMessage.replace("[", "");
                    receivedMessage = receivedMessage.replace("]", "");
                    System.out.println( receivedMessage);
                        
		}
		catch(IOException e)
		{
			System.out.println("There're some error");
		}
                Client client = new Client();
                client.setTitle("Client");
                client.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Download;
    private javax.swing.JTextField FileName;
    private javax.swing.JTextField IP;
    private javax.swing.JTextField Port;
    private javax.swing.JTable TableFile;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableListFileClient;
    // End of variables declaration//GEN-END:variables
}
