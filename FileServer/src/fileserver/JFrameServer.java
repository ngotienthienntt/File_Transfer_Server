/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fileserver;

import static com.sun.org.apache.xerces.internal.util.FeatureState.is;
import common.FileData;
import java.awt.Color;
import java.awt.List;
import java.awt.event.WindowEvent;
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yeula
 */
public class JFrameServer extends javax.swing.JFrame {
    final String PathOfDataFile = "./DataFile";
    private static Socket s = null;
    private static InputStream is;
    private static BufferedReader br;
    private static OutputStream os;
    private static BufferedWriter bw;
    UDPServer udpServer;
    
    /**
     * Creates new form JFrameServer
     */
    public JFrameServer() {
        initComponents();
        LoadListFileToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jBtnStart = new javax.swing.JButton();
        jBtnLoadListFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListFile = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextClientState = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelStateServer = new javax.swing.JLabel();
        jBtnSendMasterServer = new javax.swing.JButton();
        jTextPort = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("File Server");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("List file on Server");

        jBtnStart.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtnStart.setText("Start Server");
        jBtnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStartActionPerformed(evt);
            }
        });

        jBtnLoadListFile.setText("Load List File");
        jBtnLoadListFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLoadListFileActionPerformed(evt);
            }
        });

        jTableListFile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "File Name", "Date Modified", "Type", "Size"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableListFile);

        jTextClientState.setColumns(20);
        jTextClientState.setRows(5);
        jScrollPane1.setViewportView(jTextClientState);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Request of client");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("State :");

        jLabelStateServer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelStateServer.setText("OFF");

        jBtnSendMasterServer.setText("Send List File To Master Server");
        jBtnSendMasterServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSendMasterServerActionPerformed(evt);
            }
        });

        jTextPort.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPort.setText("6678");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Port: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(jLabel1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jBtnStart)
                .addGap(48, 48, 48)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabelStateServer)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jBtnLoadListFile)
                .addGap(142, 142, 142)
                .addComponent(jBtnSendMasterServer)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelStateServer)
                        .addComponent(jTextPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnStart)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnLoadListFile)
                    .addComponent(jBtnSendMasterServer))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//start event
    private void jBtnLoadListFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLoadListFileActionPerformed
        LoadListFileToTable();
    }//GEN-LAST:event_jBtnLoadListFileActionPerformed

    private void jBtnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStartActionPerformed

        try{
            int port = Integer.parseInt(jTextPort.getText());
        
            udpServer= new UDPServer();
            udpServer.openServer();
            udpServer.receiveMultiClient(jTextClientState);

            jLabelStateServer.setText("ON");
            jLabelStateServer.setForeground(Color.green);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null,
            "Port server invalid",
            "Inane error",
            JOptionPane.ERROR_MESSAGE);
        }
        
        
        
    }//GEN-LAST:event_jBtnStartActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            bw.write("Close");
            bw.newLine();
            bw.flush();
            
            s.close();
        } catch (IOException ex) {
            Logger.getLogger(JFrameServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jBtnSendMasterServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSendMasterServerActionPerformed
        try {
            // TODO add your handling code here:
            sendListFiletoMasterServer(udpServer.getServerPort());
        } catch (IOException ex) {
            Logger.getLogger(JFrameServer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jBtnSendMasterServerActionPerformed
//end event   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameServer().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnLoadListFile;
    private javax.swing.JButton jBtnSendMasterServer;
    private javax.swing.JButton jBtnStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelStateServer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableListFile;
    private javax.swing.JTextArea jTextClientState;
    private javax.swing.JTextField jTextPort;
    // End of variables declaration//GEN-END:variables

    

 
//end start server

    
//start load list file
    private void  LoadListFileToTable(){
        ArrayList<FileData> ListFileData = getListFileFromDataFile();
        DefaultTableModel model;      
        model = (DefaultTableModel) jTableListFile.getModel();
        model.getDataVector().removeAllElements();
        for (FileData file : ListFileData){
            Object[] items = new Object[]{
                file.getFileName(),
                file.getLastModified(),
                file.getType(),
                file.getSizeAutoConvert(),
                
            };

            model.addRow(items);
        }

    }
    
    private ArrayList<FileData> getListFileFromDataFile(){
        SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        ArrayList<FileData> results = new ArrayList<FileData>();


        File[] files = new File(PathOfDataFile).listFiles();        
        for (File file : files) {
            if (file.isFile()) {
                FileData tempFile = new FileData();
                String fileName = file.getName();
                tempFile.setFileName(fileName);
                tempFile.setSize(file.length()); // đổi từ byte sang MB
                tempFile.setLastModified(sdf.format(file.lastModified()));                
                String[] tempListFileName = fileName.split(Pattern.quote("."));
                tempFile.setType(tempListFileName[tempListFileName.length - 1]);
                results.add(tempFile);
            }
        }
        
        return results;
    }
//end load list file 

    private void sendListFiletoMasterServer(int port) throws IOException {
        
        try{
            s = new Socket("localhost",2000);

            is = s.getInputStream();
            br = new BufferedReader(new InputStreamReader(is));

            os = s.getOutputStream();
            bw = new BufferedWriter(new OutputStreamWriter(os));

            String sentMessage = String.valueOf(port);
            bw.write(sentMessage);
            bw.newLine();
            bw.flush();

            DefaultTableModel listFile = (DefaultTableModel) jTableListFile.getModel();
            bw.write(listFile.getDataVector().toString());

            bw.newLine();
            bw.flush();
            
            JOptionPane.showMessageDialog(null,
                "Send list file successfully");
        }catch (Exception ex){
            JOptionPane.showMessageDialog(null,
            "You haven't started Master Server",
            "Error",
            JOptionPane.ERROR_MESSAGE);
        }
        
       
    }
}
